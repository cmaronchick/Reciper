{"version":3,"sources":["Fire.js","routes/Login.js","routes/Home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","login","loading","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","u","catch","error","console","log","signup","createUserWithEmailAndPassword","react_default","a","createElement","class","type","onChange","placeholder","autoComplete","onClick","href","Component","Home","logout","signOut","show","new","title","description","picture","currentUser","database","ref","push","user","componentDidMount","on","snapshot","obj","val","list","keys","listItems","map","item","index","reactstrap_es","style","borderWidth","borderRadius","marginBottom","top","width","id","src","borderTopLeftRadius","borderTopRightRadius","className","required","row","xs","color","block","App","onAuthStateChanged","loggedIn","routes_Home","routes_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d17901e.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n\t/* COPY THE ACTUAL CONFIG FROM FIREBASE CONSOLE */\n\tapiKey: 'AIzaSyAQ0iAJFnGW-kqwMFkJPo2Tnhsx-Pd7fto',\n\tauthDomain: 'reactjs-firebase-tuto.firebaseapp.com',\n\tdatabaseURL: 'https://reactjs-firebase-tuto.firebaseio.com',\n\tprojectId: 'reactjs-firebase-tuto',\n\tstorageBucket: 'reactjs-firebase-tuto.appspot.com',\n\tmessagingSenderId: '428212538651'\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport fire from '../Fire';\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tloading: false\n\t\t};\n\t}\n\thandleChange = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\tlogin = e => {\n\t\tthis.setState({ loading: true });\n\t\te.preventDefault();\n\t\tfire\n\t\t\t.auth()\n\t\t\t.signInWithEmailAndPassword(this.state.email, this.state.password)\n\t\t\t.then(u => {\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tsignup = e => {\n\t\tthis.setState({ loading: true });\n\t\te.preventDefault();\n\t\tfire\n\t\t\t.auth()\n\t\t\t.createUserWithEmailAndPassword(this.state.email, this.state.password)\n\t\t\t.then(u => {})\n\t\t\t.then(u => {\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"form\">\n\t\t\t\t<input type=\"text\" onChange={this.handleChange} placeholder=\"Email\" name=\"email\" autoComplete=\"username\" />\n\t\t\t\t<input type=\"password\" onChange={this.handleChange} placeholder=\"Password\" name=\"password\" autoComplete=\"current-password\" />\n\t\t\t\t{this.state.loading ? <p>Loading ...</p> : null}\n\t\t\t\t<button onClick={this.login}>login</button>\n\t\t\t\t<div class=\"m-3\" />\n\t\t\t\t<button onClick={this.signup}>signup</button>\n\t\t\t\t<p class=\"message\">\n\t\t\t\t\tYour password must not contain spaces, special characters, or emojis. By continuing you agree to our <a href=\"#\">terms of services</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport {\n\tCard,\n\tCardImg,\n\tCardText,\n\tCardBody,\n\tCardTitle,\n\tCardSubtitle,\n\tCardFooter,\n\tCardColumns,\n\tButton,\n\tJumbotron,\n\tContainer,\n\tRow,\n\tCol\n} from 'reactstrap';\nimport fire from '../Fire';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tpicture: '',\n\t\t\tlist: [],\n\t\t\tkeys: [],\n\t\t\tshow: false\n\t\t};\n\t}\n\thandleChange = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\tlogout = () => {\n\t\tfire.auth().signOut();\n\t};\n\n\tshow = () => {\n\t\tthis.setState({ show: !this.state.show });\n\t};\n\n\tnew = e => {\n\t\tthis.setState({ loading: true });\n\t\te.preventDefault();\n\t\tlet title = this.state.title;\n\t\tlet description = this.state.description;\n\t\tlet picture = this.state.picture;\n\t\tconst { currentUser } = fire.auth();\n\t\tfire\n\t\t\t.database()\n\t\t\t.ref(`feed/`)\n\t\t\t.push({ title, description, picture, user: currentUser.email })\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({ loading: false, show: false });\n\t\t\t});\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.setState({ loading: true });\n\t\tconst { currentUser } = fire.auth();\n\t\tfire\n\t\t\t.database()\n\t\t\t.ref(`/feed/`)\n\t\t\t.on('value', snapshot => {\n\t\t\t\tvar obj = snapshot.val();\n\t\t\t\tvar list = [];\n\t\t\t\tvar keys = [];\n\t\t\t\tfor (let a in obj) {\n\t\t\t\t\tlist.push(obj[a]);\n\t\t\t\t\tkeys.push(a);\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tlist: list,\n\t\t\t\t\tkeys: keys,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst listItems = this.state.list.map((item, index) => (\n\t\t\t<Card style={{ borderWidth: 0, borderRadius: 8, marginBottom: 25 }}>\n\t\t\t\t<CardImg\n\t\t\t\t\ttop\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tid=\"mainImage\"\n\t\t\t\t\tsrc={item.picture}\n\t\t\t\t\tstyle={{ borderTopLeftRadius: 8, borderTopRightRadius: 8 }}\n\t\t\t\t/>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle>{item.title}</CardTitle>\n\t\t\t\t\t<CardText>{item.description}</CardText>\n\t\t\t\t</CardBody>\n\t\t\t\t<CardFooter>Posted by {item.user}</CardFooter>\n\t\t\t</Card>\n\t\t));\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.show ? (\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tclass=\"form-control mb-2\"\n\t\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.picture}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tname=\"picture\"\n\t\t\t\t\t\t\tclass=\"form-control mb-2\"\n\t\t\t\t\t\t\tplaceholder=\"Picture URL\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\trow=\"9\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tclass=\"form-control mb-2\"\n\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"6\" />\n\t\t\t\t\t<Col xs=\"6\" />\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t{!this.state.show ? (\n\t\t\t\t\t\t\t<Button color=\"dark\" onClick={this.show} className=\"mb-5\" block>\n\t\t\t\t\t\t\t\tCREATE POST\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{this.state.show ? (\n\t\t\t\t\t\t\t<Button color=\"dark\" onClick={this.new} className=\"mb-5\" block>\n\t\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t<Button color=\"light\" onClick={this.logout} className=\"mb-5\" block>\n\t\t\t\t\t\t\tLOGOUT\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{this.state.loading ? <h6 class=\"mb-5\">Loading ...</h6> : null}\n\t\t\t\t<CardColumns className=\"mb-5\">{listItems}</CardColumns>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport Login from './routes/Login';\nimport Home from './routes/Home';\nimport fire from './Fire';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tloggedIn: null\n\t\t};\n\t}\n\tcomponentDidMount = () => {\n\t\tthis.setState({ loading: true });\n\t\tfire.auth().onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\tthis.setState({ loggedIn: true, loading: false });\n\t\t\t} else {\n\t\t\t\tthis.setState({ loggedIn: false, loading: false });\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-xs-2\" />\n\t\t\t\t\t\t<div class=\"col-xs-8\">\n\t\t\t\t\t\t\t<h1 className=\"text-light pt-5 pb-5\">Lumen</h1>\n\t\t\t\t\t\t\t{this.state.loggedIn ? <Home /> : <Login />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-xs-2\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}